<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-dhyw9d5DfQW1aTIVCOAMZA" name=",__IWHAPHIEeSMu6QOYZJYaQ" guid="-dhyw9d5DfQW1aTIVCOAMZA" changeDate="2015-05-03T03:17:49.000-0400">
  <mainDescription>&lt;span
style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>
Usually, this task is focused on a specific implementation&amp;nbsp;element, such as a class or component, but it does not need
to be.&lt;/span></mainDescription>
  <sections xmi:id="_KVxBsPHJEeSMu6QOYZJYaQ" name="Determine a strategy" guid="_KVxBsPHJEeSMu6QOYZJYaQ">
    <sectionDescription>&lt;p style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    Determine a strategy based on the software design and developer tests&amp;nbsp;for how you are going to implement the&#xD;
    solution. The fundamental options are:&#xD;
&lt;/p>&#xD;
&lt;ol style=&quot;LIST-STYLE-TYPE: decimal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; MARGIN-LEFT: 30px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Apply existing, reusable assets.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Model the design in detail and generate the source code (by model transformation).&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Write the source code.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Any combination of the above.&#xD;
    &lt;/li>&#xD;
&lt;/ol></sectionDescription>
  </sections>
  <sections xmi:id="_OMbxQPHJEeSMu6QOYZJYaQ" name="Identify opportunities for reuse" guid="_OMbxQPHJEeSMu6QOYZJYaQ">
    <sectionDescription>&lt;span style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
Identify existing code or other implementation elements that can be reused in the portion of the implementation that you&#xD;
are creating or changing. A comprehensive understanding of the overall design is helpful, because it is best to leverage&#xD;
reuse opportunities when you have a thorough understanding of the proposed solution.&lt;/span></sectionDescription>
  </sections>
  <sections xmi:id="_Re3yYPHJEeSMu6QOYZJYaQ" name="Transform design into implementation" guid="_Re3yYPHJEeSMu6QOYZJYaQ">
    <sectionDescription>&lt;span style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
If you are using sophisticated modeling tools, you should be able to generate a portion of the required source code from&#xD;
the model. Note that programming is&amp;nbsp;commonly required to complete the implementation after the design model has been&#xD;
transformed into code.&lt;/span></sectionDescription>
  </sections>
  <sections xmi:id="_VSQkcPHJEeSMu6QOYZJYaQ" name="sign and developer tests." guid="_VSQkcPHJEeSMu6QOYZJYaQ">
    <sectionDescription>&lt;p style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    Write the source code to make the implementation conform to the design and expected behavior. You should strive to&#xD;
    reuse and/or generate code wherever possible, but you will still need to do some programming. To do so, consider the&#xD;
    following:&#xD;
&lt;/p>&#xD;
&lt;ul style=&quot;LIST-STYLE-TYPE: disc; MARGIN-BOTTOM: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; PADDING-LEFT: 0px; MARGIN-LEFT: 30px; WIDOWS: 1; MARGIN-TOP: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Examine the technical requirements. Because some requirement information does not translate directly into your&#xD;
        design you should examine the requirement(s) to ensure that they are fully realized in the implementation.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Refactor your code to improve its design. Refactoring is a technique where you improve the quality of your code via&#xD;
        small, safe changes.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Tune the results of the existing implementation by improving performance, the user interface, security, and other&#xD;
        nonfunctional areas.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Add missing details, such as completing the logic of operations or adding supporting classes and data structures&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Handle boundary conditions.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Deal with unusual circumstances or error states.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Restrict behavior (preventing users or client code from executing illegal flows, scenarios, or combinations of&#xD;
        options).&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Add critical sections for multi-threaded or re-entrant code.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    Though many different considerations are listed here, there is one clear way to know when the source code is done. The&#xD;
    solution has been implemented when it passes the developer tests. Any other considerations can be taken care of in a&#xD;
    refactoring pass over the code to improve it once it is complete and correct.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_Z2HKIPHJEeSMu6QOYZJYaQ" name="Evaluate the implementation" guid="_Z2HKIPHJEeSMu6QOYZJYaQ">
    <sectionDescription>&lt;p style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    Verify that the implementation is fit for its purpose. Examine the code for its suitability to perform its intended&#xD;
    function. This is a quality assurance step that you perform in addition to testing which is described in other tasks.&#xD;
    Consider these strategies:&#xD;
&lt;/p>&#xD;
&lt;ul style=&quot;LIST-STYLE-TYPE: disc; MARGIN-BOTTOM: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; PADDING-LEFT: 0px; MARGIN-LEFT: 30px; WIDOWS: 1; MARGIN-TOP: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Pair programming. By pairing to implement the code in the first place, you effectively evaluate the code as its&#xD;
        being written.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Read through the code for common mistakes. Consider keeping a checklist of common mistakes that you make, as a&#xD;
        reminder reference.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Use tools to check for implementation errors and inappropriate code. For example, use a static code rule checker or&#xD;
        set the compiler to the most detailed warning level.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Use tools that can visualize the code. Code visualization, such as the UML visualizations in the Eclipse IDE, help&#xD;
        developers identify issues such as excessive coupling or circular dependencies.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Perform informal, targeted code inspections. Ask colleagues to review small critical sections of code and code with&#xD;
        significant churn. Avoid reviewing large sections of code.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: arial, helvetica, sans-serif, kanji2; TEXT-ALIGN: left&quot;>&#xD;
        Use&amp;nbsp;a tester to ensure the implementation is testable and understandable to testing resources.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
    Improve the implementation based on the results of these evaluations.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_cSBL4PHJEeSMu6QOYZJYaQ" name="Communicate significant decisions" guid="_cSBL4PHJEeSMu6QOYZJYaQ">
    <sectionDescription>&lt;span&#xD;
style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>&#xD;
Communicate the impact of unexpected changes to the design and requirements.&lt;/span></sectionDescription>
  </sections>
  <purpose>&lt;span
style=&quot;WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px arial, helvetica, sans-serif, kanji2; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px&quot;>
The purpose of this task is to produce an implementation for part of the solution (such as a class or component), or to fix
one or more defects. The result is typically new or modified source code, which is&amp;nbsp;referred to the
implementation.&lt;/span></purpose>
</org.eclipse.epf.uma:TaskDescription>
